I0610 21:53:52.202452  3489 Util.cpp:166] commandline:  --use_gpu=False --trainer_count=2 
W0610 21:53:52.202481  3489 CpuId.h:112] PaddlePaddle wasn't compiled to use avx instructions, but these are available on your machine and could speed up CPU computations via CMAKE .. -DWITH_AVX=ON
[INFO 2018-06-10 21:53:52,424 layers.py:2716] output for conv1_1: c = 64, h = 300, w = 300, size = 5760000
[INFO 2018-06-10 21:53:52,425 layers.py:2716] output for conv1_2: c = 64, h = 300, w = 300, size = 5760000
[INFO 2018-06-10 21:53:52,426 layers.py:2858] output for pool1: c = 64, h = 150, w = 150, size = 1440000
[INFO 2018-06-10 21:53:52,426 layers.py:2716] output for conv2_1: c = 128, h = 150, w = 150, size = 2880000
[INFO 2018-06-10 21:53:52,427 layers.py:2716] output for conv2_2: c = 128, h = 150, w = 150, size = 2880000
[INFO 2018-06-10 21:53:52,427 layers.py:2858] output for pool2: c = 128, h = 75, w = 75, size = 720000
[INFO 2018-06-10 21:53:52,428 layers.py:2716] output for conv3_1: c = 256, h = 75, w = 75, size = 1440000
[INFO 2018-06-10 21:53:52,429 layers.py:2716] output for conv3_2: c = 256, h = 75, w = 75, size = 1440000
[INFO 2018-06-10 21:53:52,429 layers.py:2716] output for conv3_3: c = 256, h = 75, w = 75, size = 1440000
[INFO 2018-06-10 21:53:52,430 layers.py:2858] output for __pool_0__: c = 256, h = 38, w = 38, size = 369664
[INFO 2018-06-10 21:53:52,430 layers.py:2716] output for conv4_1: c = 512, h = 38, w = 38, size = 739328
[INFO 2018-06-10 21:53:52,431 layers.py:2716] output for conv4_2: c = 512, h = 38, w = 38, size = 739328
[INFO 2018-06-10 21:53:52,432 layers.py:2716] output for conv4_3: c = 512, h = 38, w = 38, size = 739328
[INFO 2018-06-10 21:53:52,432 layers.py:2858] output for __pool_1__: c = 512, h = 19, w = 19, size = 184832
[INFO 2018-06-10 21:53:52,433 layers.py:2716] output for conv4_3_norm_mbox_loc: c = 12, h = 38, w = 38, size = 17328
[INFO 2018-06-10 21:53:52,434 layers.py:2716] output for conv4_3_norm_mbox_conf: c = 6, h = 38, w = 38, size = 8664
[INFO 2018-06-10 21:53:52,435 layers.py:2716] output for conv5_1: c = 512, h = 19, w = 19, size = 184832
[INFO 2018-06-10 21:53:52,435 layers.py:2716] output for conv5_2: c = 512, h = 19, w = 19, size = 184832
[INFO 2018-06-10 21:53:52,436 layers.py:2716] output for conv5_3: c = 512, h = 19, w = 19, size = 184832
[INFO 2018-06-10 21:53:52,437 layers.py:2858] output for __pool_2__: c = 512, h = 19, w = 19, size = 184832
[INFO 2018-06-10 21:53:52,438 layers.py:2716] output for fc6: c = 1024, h = 19, w = 19, size = 369664
[INFO 2018-06-10 21:53:52,439 layers.py:2716] output for fc7: c = 1024, h = 19, w = 19, size = 369664
[INFO 2018-06-10 21:53:52,440 layers.py:2716] output for fc7_mbox_loc: c = 24, h = 19, w = 19, size = 8664
[INFO 2018-06-10 21:53:52,440 layers.py:2716] output for fc7_mbox_conf: c = 12, h = 19, w = 19, size = 4332
[INFO 2018-06-10 21:53:52,441 layers.py:2716] output for conv6_1: c = 256, h = 19, w = 19, size = 92416
[INFO 2018-06-10 21:53:52,442 layers.py:2716] output for conv6_2: c = 512, h = 10, w = 10, size = 51200
[INFO 2018-06-10 21:53:52,443 layers.py:2716] output for conv6_2_mbox_loc: c = 24, h = 10, w = 10, size = 2400
[INFO 2018-06-10 21:53:52,443 layers.py:2716] output for conv6_2_mbox_conf: c = 12, h = 10, w = 10, size = 1200
[INFO 2018-06-10 21:53:52,444 layers.py:2716] output for conv7_1: c = 128, h = 10, w = 10, size = 12800
[INFO 2018-06-10 21:53:52,445 layers.py:2716] output for conv7_2: c = 256, h = 5, w = 5, size = 6400
[INFO 2018-06-10 21:53:52,445 layers.py:2716] output for conv7_2_mbox_loc: c = 24, h = 5, w = 5, size = 600
[INFO 2018-06-10 21:53:52,446 layers.py:2716] output for conv7_2_mbox_conf: c = 12, h = 5, w = 5, size = 300
[INFO 2018-06-10 21:53:52,447 layers.py:2716] output for conv8_1: c = 128, h = 5, w = 5, size = 3200
[INFO 2018-06-10 21:53:52,447 layers.py:2716] output for conv8_2: c = 256, h = 3, w = 3, size = 2304
[INFO 2018-06-10 21:53:52,448 layers.py:2716] output for conv8_2_mbox_loc: c = 24, h = 3, w = 3, size = 216
[INFO 2018-06-10 21:53:52,448 layers.py:2716] output for conv8_2_mbox_conf: c = 12, h = 3, w = 3, size = 108
[INFO 2018-06-10 21:53:52,449 layers.py:2858] output for pool6: c = 256, h = 1, w = 1, size = 256
[INFO 2018-06-10 21:53:52,450 layers.py:2716] output for pool6_mbox_loc: c = 24, h = 1, w = 1, size = 24
[INFO 2018-06-10 21:53:52,451 layers.py:2716] output for pool6_mbox_conf: c = 12, h = 1, w = 1, size = 12
*** Aborted at 1528638834 (unix time) try "date -d @1528638834" if you are using GNU date ***
PC: @                0x0 (unknown)
*** SIGFPE (@0x7fe48d86ff08) received by PID 3489 (TID 0x7fe4cb82e700) from PID 18446744071789018888; stack trace: ***
    @     0x7fe4cb446390 (unknown)
    @     0x7fe48d86ff08 QXcbConnection::touchDeviceForId()
    @     0x7fe48d87144d QXcbConnection::xi2SetupDevices()
    @     0x7fe48d871a86 QXcbConnection::initializeXInput2()
    @     0x7fe48d84b891 QXcbConnection::QXcbConnection()
    @     0x7fe48d84ebad QXcbIntegration::QXcbIntegration()
    @     0x7fe4cb7aa3ad (unknown)
    @     0x7fe4a28e7d92 QPlatformIntegrationFactory::create()
    @     0x7fe4a28f3fc4 QGuiApplicationPrivate::createPlatformIntegration()
    @     0x7fe4a28f4ecd QGuiApplicationPrivate::createEventDispatcher()
    @     0x7fe4a25bc7e6 QCoreApplication::init()
    @     0x7fe4a25bc856 QCoreApplication::QCoreApplication()
    @     0x7fe4a28f6cc9 QGuiApplication::QGuiApplication()
    @     0x7fe4a2eadbcd QApplication::QApplication()
    @     0x7fe4a7b72d48 (unknown)
    @     0x7fe4a7b80195 cvShowImage
    @     0x7fe4a7b6c669 cv::imshow()
    @     0x7fe4aea494b3 (unknown)
    @           0x4bc3fa PyEval_EvalFrameEx
    @           0x4b9ab6 PyEval_EvalCodeEx
    @           0x4eb30f (unknown)
    @           0x4e5422 PyRun_FileExFlags
    @           0x4e3cd6 PyRun_SimpleFileExFlags
    @           0x493ae2 Py_Main
    @     0x7fe4cb08b830 __libc_start_main
    @           0x4933e9 _start
    @                0x0 (unknown)
Floating point exception (core dumped)
